const expectedColumnInFile: string[] = [
    "Patient number",
    "Leukocytes",
    "Hemoglobin",
    "MCV",
    "Thrombocytes",
    "ESR",
    "Age",
    "RF",
    "ACPA",
    "Sex",
    "t_ac_right",
    "t_ac_left",
    "s_ac_right",
    "s_ac_left",
    "t_ank_right",
    "t_ank_left",
    "s_ank_right",
    "s_ank_left",
    "t_onderste_spronggewricht_right",
    "t_onderste_spronggewricht_left",
    "s_onderste_spronggewricht_right",
    "s_onderste_spronggewricht_left",
    "t_el_right",
    "t_el_left",
    "s_el_right",
    "s_el_left",
    "t_pip1_right",
    "t_pip1_left",
    "t_pip2_right",
    "t_pip2_left",
    "t_pip3_right",
    "t_pip3_left",
    "t_pip4_left",
    "t_pip4_right",
    "t_pip5_right",
    "t_pip5_left",
    "t_dip2_right",
    "t_dip2_left",
    "t_dip3_right",
    "t_dip3_left",
    "t_dip4_right",
    "t_dip4_left",
    "t_dip5_right",
    "t_dip5_left",
    "s_pip1_right",
    "s_pip1_left",
    "s_pip2_right",
    "s_pip2_left",
    "s_pip3_right",
    "s_pip3_left",
    "s_pip4_right",
    "s_pip4_left",
    "s_pip5_right",
    "s_pip5_left",
    "s_dip2_right",
    "s_dip2_left",
    "s_dip3_right",
    "s_dip3_left",
    "s_dip4_right",
    "s_dip4_left",
    "s_dip5_right",
    "s_dip5_left",
    "t_kn_right",
    "t_kn_left",
    "s_kn_right",
    "s_kn_left",
    "t_mcp1_right",
    "t_mcp1_left",
    "t_mcp2_right",
    "t_mcp2_left",
    "t_mcp3_right",
    "t_mcp3_left",
    "t_mcp4_right",
    "t_mcp4_left",
    "t_mcp5_left",
    "t_mcp5_right",
    "s_mcp1_right",
    "s_mcp1_left",
    "s_mcp2_right",
    "s_mcp2_left",
    "s_mcp3_right",
    "s_mcp3_left",
    "s_mcp4_right",
    "s_mcp4_left",
    "s_mcp5_right",
    "s_mcp5_left",
    "t_tar_right",
    "t_tar_left",
    "s_tar_right",
    "s_tar_left",
    "t_mtp1_right",
    "t_mtp1_left",
    "t_mtp2_right",
    "t_mtp2_left",
    "t_mtp3_right",
    "t_mtp3_left",
    "t_mtp4_right",
    "t_mtp4_left",
    "t_mtp5_right",
    "t_mtp5_left",
    "s_mtp1_right",
    "s_mtp1_left",
    "s_mtp2_right",
    "s_mtp2_left",
    "s_mtp3_right",
    "s_mtp3_left",
    "s_mtp4_right",
    "s_mtp4_left",
    "s_mtp5_right",
    "s_mtp5_left",
    "t_sc_right",
    "t_sc_left",
    "s_sc_right",
    "s_sc_left",
    "t_sh_right",
    "t_sh_left",
    "s_sh_right",
    "s_sh_left",
    "t_tm_right",
    "t_tm_left",
    "s_tm_right",
    "s_tm_left",
    "t_wr_right",
    "t_wr_left",
    "s_wr_right",
    "s_wr_left",
    "t_hip_right",
    "t_hip_left",
] as const;

const lcat = [
    "s_el_left_negative",
    "s_el_left_positive",
    "s_pip1_left_negative",
    "s_pip1_left_positive",
    "s_pip1_right_negative",
    "s_pip1_right_positive",
    "s_ac_left_negative",
    "s_ac_left_positive",
    "s_ac_right_negative",
    "s_ac_right_positive",
    "s_ank_left_negative",
    "s_ank_left_positive",
    "s_ank_right_negative",
    "s_ank_right_positive",
    "s_dip2_left_negative",
    "s_dip2_left_positive",
    "s_dip2_right_negative",
    "s_dip2_right_positive",
    "s_dip3_left_negative",
    "s_dip3_left_positive",
    "s_dip3_right_negative",
    "s_dip3_right_positive",
    "s_dip4_left_negative",
    "s_dip4_left_positive",
    "s_dip4_right_negative",
    "s_dip4_right_positive",
    "s_dip5_left_negative",
    "s_dip5_left_positive",
    "s_dip5_right_negative",
    "s_dip5_right_positive",
    "s_el_right_negative",
    "s_el_right_positive",
    "s_kn_left_negative",
    "s_kn_left_positive",
    "s_kn_right_negative",
    "s_kn_right_positive",
    "s_mcp1_left_negative",
    "s_mcp1_left_positive",
    "s_mcp1_right_negative",
    "s_mcp1_right_positive",
    "s_mcp2_left_negative",
    "s_mcp2_left_positive",
    "s_mcp2_right_negative",
    "s_mcp2_right_positive",
    "s_mcp3_left_negative",
    "s_mcp3_left_positive",
    "s_mcp3_right_negative",
    "s_mcp3_right_positive",
    "s_mcp4_left_negative",
    "s_mcp4_left_positive",
    "s_mcp4_right_negative",
    "s_mcp4_right_positive",
    "s_mcp5_left_negative",
    "s_mcp5_left_positive",
    "s_mcp5_right_negative",
    "s_mcp5_right_positive",
    "s_mtp1_left_negative",
    "s_mtp1_left_positive",
    "s_mtp1_right_negative",
    "s_mtp1_right_positive",
    "s_mtp2_left_negative",
    "s_mtp2_left_positive",
    "s_mtp2_right_negative",
    "s_mtp2_right_positive",
    "s_mtp3_left_negative",
    "s_mtp3_left_positive",
    "s_mtp3_right_negative",
    "s_mtp3_right_positive",
    "s_mtp4_left_negative",
    "s_mtp4_left_positive",
    "s_mtp4_right_negative",
    "s_mtp4_right_positive",
    "s_mtp5_left_negative",
    "s_mtp5_left_positive",
    "s_mtp5_right_negative",
    "s_mtp5_right_positive",
    "s_onderste_spronggewricht_left_negative",
    "s_onderste_spronggewricht_left_positive",
    "s_onderste_spronggewricht_right_negative",
    "s_onderste_spronggewricht_right_positive",
    "s_pip2_left_negative",
    "s_pip2_left_positive",
    "s_pip2_right_negative",
    "s_pip2_right_positive",
    "s_pip3_left_negative",
    "s_pip3_left_positive",
    "s_pip3_right_negative",
    "s_pip3_right_positive",
    "s_pip4_left_negative",
    "s_pip4_left_positive",
    "s_pip4_right_negative",
    "s_pip4_right_positive",
    "s_pip5_left_negative",
    "s_pip5_left_positive",
    "s_pip5_right_negative",
    "s_pip5_right_positive",
    "s_wr_left_negative",
    "s_wr_left_positive",
    "s_wr_right_negative",
    "s_wr_right_positive",
    "s_sh_left_negative",
    "s_sh_left_positive",
    "s_sh_right_negative",
    "s_sh_right_positive",
    "s_sc_left_negative",
    "s_sc_left_positive",
    "s_sc_right_negative",
    "s_sc_right_positive",
    "s_tar_left_negative",
    "s_tar_left_positive",
    "s_tar_right_negative",
    "s_tar_right_positive",
    "s_tm_left_negative",
    "s_tm_left_positive",
    "s_tm_right_negative",
    "s_tm_right_positive",
    "t_el_left_negative",
    "t_el_left_positive",
    "t_pip1_left_negative",
    "t_pip1_left_positive",
    "t_pip1_right_negative",
    "t_pip1_right_positive",
    "t_ac_left_negative",
    "t_ac_left_positive",
    "t_ac_right_negative",
    "t_ac_right_positive",
    "t_ank_left_negative",
    "t_ank_left_positive",
    "t_ank_right_negative",
    "t_ank_right_positive",
    "t_dip2_left_negative",
    "t_dip2_left_positive",
    "t_dip2_right_negative",
    "t_dip2_right_positive",
    "t_dip3_left_negative",
    "t_dip3_left_positive",
    "t_dip3_right_negative",
    "t_dip3_right_positive",
    "t_dip4_left_negative",
    "t_dip4_left_positive",
    "t_dip4_right_negative",
    "t_dip4_right_positive",
    "t_dip5_left_negative",
    "t_dip5_left_positive",
    "t_dip5_right_negative",
    "t_dip5_right_positive",
    "t_el_right_negative",
    "t_el_right_positive",
    "t_hip_left_negative",
    "t_hip_left_positive",
    "t_hip_right_negative",
    "t_hip_right_positive",
    "t_kn_left_negative",
    "t_kn_left_positive",
    "t_kn_right_negative",
    "t_kn_right_positive",
    "t_mcp1_left_negative",
    "t_mcp1_left_positive",
    "t_mcp1_right_negative",
    "t_mcp1_right_positive",
    "t_mcp2_left_negative",
    "t_mcp2_left_positive",
    "t_mcp2_right_negative",
    "t_mcp2_right_positive",
    "t_mcp3_left_negative",
    "t_mcp3_left_positive",
    "t_mcp3_right_negative",
    "t_mcp3_right_positive",
    "t_mcp4_left_negative",
    "t_mcp4_left_positive",
    "t_mcp4_right_negative",
    "t_mcp4_right_positive",
    "t_mcp5_left_negative",
    "t_mcp5_left_positive",
    "t_mcp5_right_negative",
    "t_mcp5_right_positive",
    "t_mtp1_left_negative",
    "t_mtp1_left_positive",
    "t_mtp1_right_negative",
    "t_mtp1_right_positive",
    "t_mtp2_left_negative",
    "t_mtp2_left_positive",
    "t_mtp2_right_negative",
    "t_mtp2_right_positive",
    "t_mtp3_left_negative",
    "t_mtp3_left_positive",
    "t_mtp3_right_negative",
    "t_mtp3_right_positive",
    "t_mtp4_left_negative",
    "t_mtp4_left_positive",
    "t_mtp4_right_negative",
    "t_mtp4_right_positive",
    "t_mtp5_left_negative",
    "t_mtp5_left_positive",
    "t_mtp5_right_negative",
    "t_mtp5_right_positive",
    "t_onderste_spronggewricht_left_negative",
    "t_onderste_spronggewricht_left_positive",
    "t_onderste_spronggewricht_right_negative",
    "t_onderste_spronggewricht_right_positive",
    "t_pip2_left_negative",
    "t_pip2_left_positive",
    "t_pip2_right_negative",
    "t_pip2_right_positive",
    "t_pip3_left_negative",
    "t_pip3_left_positive",
    "t_pip3_right_negative",
    "t_pip3_right_positive",
    "t_pip4_left_negative",
    "t_pip4_left_positive",
    "t_pip4_right_negative",
    "t_pip4_right_positive",
    "t_pip5_left_negative",
    "t_pip5_left_positive",
    "t_pip5_right_negative",
    "t_pip5_right_positive",
    "t_wr_left_negative",
    "t_wr_left_positive",
    "t_wr_right_negative",
    "t_wr_right_positive",
    "t_sh_left_negative",
    "t_sh_left_positive",
    "t_sh_right_negative",
    "t_sh_right_positive",
    "t_sc_left_negative",
    "t_sc_left_positive",
    "t_sc_right_negative",
    "t_sc_right_positive",
    "t_tar_left_negative",
    "t_tar_left_positive",
    "t_tar_right_negative",
    "t_tar_right_positive",
    "t_tm_left_negative",
    "t_tm_left_positive",
    "t_tm_right_negative",
    "t_tm_right_positive",
    "RF",
    "ACPA",
    "Sex",
    "Age_Early",
    "Age_Late",
];

const lnum = ["Leukocytes", "Hemoglobin", "MCV", "Thrombocytes", "ESR", "Age"];
const expectedOrderForModel = ["Patient number"].concat(lnum).concat(lcat);

export { expectedColumnInFile, expectedOrderForModel };
